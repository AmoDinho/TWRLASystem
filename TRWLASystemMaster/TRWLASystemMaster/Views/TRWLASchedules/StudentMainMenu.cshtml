@model IEnumerable<TRWLASystemMaster.Models.DB.TRWLASchedule>

@{
    ViewBag.Title = "StudentMainMenu";
    Layout = "~/Views/Shared/StudentLoggedInView.cshtml";
}

<div class="jumbotron">
    <h2>Welcome to the TRWLA Management System</h2>
</div>

@*<div id="divUserListContainer">
        @Html.Action("ManageUserPartial", "Manage");
    </div>*@
@if (Session["User"] != null)
{



if (TempData["rsvp"] != null)
{
    <h4>@TempData["rsvp"]</h4>
}
if (TempData["rsvpFAIL"] != null)
{
    <h4>@TempData["rsvpFAIL"]</h4>
}
if (TempData["Attended"] != null)
{
    <h4>@TempData["Attended"]</h4>
}

<div class="form-inline" style="margin-bottom:10px;">
    <div class="form-group">
        @using (Html.BeginForm())
        {
            <p>
                @Html.Label("Find by name:") @Html.TextBox("searchString"@*, "", new { placeholder = "Name of Event" }*@)
                <button type="submit" value="Search" class="btn"><i class="fa fa-search" aria-hidden="true"></i>Search</button>
            </p>
        }
    </div>
</div>

<div class="form-inline" style="margin-bottom:10px;">
    <div class="form-group">
        <p>
            @Html.Label("Filter by:")
        </p>
    </div>
    <div class="form-group">
        <div>
            <button type="button" class="btn" onclick="location.href='@Url.Action("StudentMainMenu", "TRWLASchedules", new { all = ViewBag.SurnameSortParm })'">All</button>

        </div>
    </div>
    <div class="form-group">
        <div>
            <button type="button" class="btn" onclick="location.href='@Url.Action("StudentMainMenu", "TRWLASchedules", new { CO = ViewBag.SurnameSortParm })'">Community Engagements</button>
        </div>
    </div>
    <div class="form-group">
        <div>
            <button type="button" class="btn" onclick="location.href='@Url.Action("StudentMainMenu", "TRWLASchedules", new { L = ViewBag.SurnameSortParm })'">Lectures</button>
        </div>
    </div>
    <div class="form-group">
        <div>
            <button type="button" class="btn" onclick="location.href='@Url.Action("StudentMainMenu", "TRWLASchedules", new { F = ViewBag.SurnameSortParm })'">Functions</button>
        </div>
    </div>
</div>

@*<select id="filter">
        <option value="All">All</option>
        <option value="Functions">Functions</option>
    </select>

    <script>
        $(function () {
            $('#filter').on('change', function () {
                var value;
                if(value == "All")
                {
                    @Html.ActionLink("Show all","Index", new { all = ViewBag.SurnameSortParm })
                }
                else if (value == "Functions") {
                     @Html.ActionLink("Functions", "Index", new { F = ViewBag.SurnameSortParm })
                }
            });
        });

    </script>*@


@*@using (Html.BeginForm())
{
    TRWLASystemMaster.Models.DB.Progress myprog = new TRWLASystemMaster.Models.DB.Progress();

    if (myprog.ProgressCount == 1)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 2)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 3)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 4)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 5)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 6)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 7)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 8)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 9)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else if (myprog.ProgressCount == 10)
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="progress-container progress-danger">
            <span class="progress-badge">Danger</span>
            <div class="progress">
                <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                    <span class="progress-value">60%</span>
                </div>
            </div>
        </div>
    }
}*@


    <div class="row" @*id="showMe" style="display:none;*@>

    <div class="col-md-6" style="box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3); margin-bottom:10px; height:500px; overflow-y:auto;">
        <h3 style="text-align:center;">Upcoming TRWLA Events</h3>
        @foreach (var item in Model)
        {
            <div class="col-md-5" style="margin-bottom:15px; margin-top:10px;">
                <h4>
                    @Html.DisplayFor(modelItem => item.FunctionEvent.Function_Name)
                    @Html.DisplayFor(modelItem => item.Lecture.Lecture_Name)
                    @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_Name)
                </h4>
                <p>
                    <strong>Summary:</strong>
                    @Html.DisplayFor(modelItem => item.FunctionEvent.Function_Summary, new { @style = "max-width:5px; text-overflow: ellipsis;" })
                    @Html.DisplayFor(modelItem => item.Lecture.Lecture_Summary, new { @style = "width:10%" })
                    @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_Name, new { @style = "width:10%" })
                </p>
                <p>
                    <strong>
                        Date of the Event:
                    </strong>
                    @Html.DisplayFor(modelItem => item.FunctionEvent.Function_Date, "{0:dd/MM/yyyy}")
                    @Html.DisplayFor(modelItem => item.Lecture.Lecture_Date, "{0:dd/MM/yyyy}")
                    @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_Date, "{0:dd/MM/yyyy}")
                </p>
                <p>
                    <strong>
                        Start of Event:
                    </strong>

                    @Html.DisplayFor(modelItem => item.FunctionEvent.Function_StartTime)
                    @Html.DisplayFor(modelItem => item.Lecture.Lecture_StartTime)
                    @Html.DisplayFor(modelItem => item.ComEngEvent.ComEnge_StartTime)

                </p>

                <p>
                    <strong>
                        End of Event:
                    </strong>

                    @Html.DisplayFor(modelItem => item.FunctionEvent.Function_EndTime)
                    @Html.DisplayFor(modelItem => item.Lecture.Lecture_EndTime)
                    @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_EndTime)

                </p>
                <p>
                    <strong>
                        Venue Name:
                    </strong>
                    @Html.DisplayFor(modelItem => item.FunctionEvent.Venue.Venue_Name)
                    @Html.DisplayFor(modelItem => item.Lecture.Residence.Res_Name)
                    @Html.DisplayFor(modelItem => item.ComEngEvent.Venue.Venue_Name)
                </p>
                <p>
                    @Html.ActionLink("Details", "StudentEventDetails", new { id = item.ScheduleID }) |
                    @Html.ActionLink("RSVP", "RSVP", new { id = item.ScheduleID })
                    @*<button class="btn-primary" data-toggle="modal" data-target="#NotGoing">
                            RSVP
                        </button>*@


                    @*<div class="form-actions no-color ">
                            <button type="submit" value="RSVP" class="btn" id="item.Schedule">Cancel Event</button>
                        </div>*@
                </p>
            </div>
        }

    </div>

    <div class="col-md-5" style="box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3); float:right; margin-left:3px;margin-bottom:10px; height:500px; overflow-y:auto;">
        <h3 style="text-align:center;">My Upcoming Events</h3>

        <div class="row">
            @foreach (var item in Model)
            {
                foreach (var s in item.RSVPSchedules.Where(p => p.SYSUserProfileID == (int)Session["User"]).Where(p => p.RSVP_Event.Attended == null))
                {
                    <div class="col-md-5" style="margin-bottom:20px; margin-top:10px;">
                        <h4>
                            @Html.DisplayFor(modelItem => item.FunctionEvent.Function_Name)
                            @Html.DisplayFor(modelItem => item.Lecture.Lecture_Name)
                            @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_Name)
                        </h4>

                        <p>
                            <strong>Summary:</strong>
                            @Html.DisplayFor(modelItem => item.FunctionEvent.Function_Summary, new { @style = "max-width:5px; text-overflow: ellipsis;" })
                            @Html.DisplayFor(modelItem => item.Lecture.Lecture_Summary, new { @style = "width:10%" })
                            @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_Name, new { @style = "width:10%" })
                        </p>
                        <p>
                            <strong>
                                Date of the Event:
                            </strong>
                            @Html.DisplayFor(modelItem => item.FunctionEvent.Function_Date)
                            @Html.DisplayFor(modelItem => item.Lecture.Lecture_Date)
                            @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_Name)
                        </p>
                        <p>
                            <strong>
                                Time of Event:
                            </strong>
                            @Html.DisplayFor(modelItem => item.FunctionEvent.Function_StartTime) to @Html.DisplayFor(modelItem => item.FunctionEvent.Function_EndTime)
                            @Html.DisplayFor(modelItem => item.Lecture.Lecture_StartTime) to @Html.DisplayFor(modelItem => item.Lecture.Lecture_EndTime)
                            @Html.DisplayFor(modelItem => item.ComEngEvent.ComEnge_StartTime) to @Html.DisplayFor(modelItem => item.ComEngEvent.ComEng_EndTime)

                        </p>
                        <p>
                            <strong>
                                Venue Name:
                            </strong>
                            @Html.DisplayFor(modelItem => item.FunctionEvent.Venue.Venue_Name)
                            @Html.DisplayFor(modelItem => item.Lecture.Residence.Res_Name)
                            @Html.DisplayFor(modelItem => item.ComEngEvent.Venue.Venue_Name)
                        </p>
                        <p>
                            @Html.ActionLink("Details", "StudentEventDetails", new { id = item.ScheduleID })

                            @if (item.LectureID != null)
                            {
                            <p>|  @Html.ActionLink("Write a Review", "WriteReview", new { id = item.ScheduleID })</p>
                            }

                            </p>
                        </div>
                }
            }
        </div>
    </div>

</div>
}
@if (Session["User"] == null)
{
    <h4>Something Went Wrong</h4>
    <button type="button" class="btn" onclick="location.href='@Url.Action("Index", "Home")'">Let us start again</button>
}

